name: ci-push-jobs

# events that trigger the workflow
on:
  push:

jobs:
  # name of the job
  # this job updates the __init__.pys to include recursively all the attributes
  # it is run on all push/pull requests
  mkinit-init-attribute-update:
    # this needs to be executed only if there is a push, as there are commit
    # permissions with the secrets
    if: github.event_name == 'push'
    # the system to run on
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest

    steps:
    # we check out the repository
    - name: Repository check-out
      uses: actions/checkout@v3

    # we set up the Python environment
    - name: Set up Python 3.9
      uses: actions/setup-python@v2.3.1
      with:
        python-version: 3.9

    # answer https://stackoverflow.com/a/60942437
    # then the datetime is available as ${{ steps.datetime.outputs.datetime }}
    - name: Get current date/time
      id: datetime
      run: |
        echo "::set-output name=datetime::$(date +'%Y-%m-%dT%H_%M_%S')"

    # answer https://stackoverflow.com/a/60302058
    # it gets only the branch name from GITHUB_REF refs/heads/<branch_name>
    # **NOTE**: this does not work for pull requests
    # - name: Get branch_name
    #     id: branch_name
    #     run: |
    #       echo "::set-output name=branch_name::${GITHUB_REF#refs/heads/}"

    - name: Install mkinit
      run: |
        python --version
        python -m pip --version
        python -m pip install mkinit==0.3.4
        python -m pip list

    - name: Run mkinit
      # we run mkinit in a recursive way, defining also the internal __init__.py
      # we use black as code style
      # lazy is for triggering the lazy imports, only when the attributes are
      # accessed
      # write is to write the changes
      # verbose 2 is the DEBUG level for the Python logging
      # **NOTE**: we need to use both 1 and 2 redirection as debug info is going
      # to the stderr stream
      run: |
        python -m mkinit --recursive --black --lazy --write --verbose 2 src/enpheeph 1> mkinit-${{ steps.datetime.outputs.datetime }}.log 2> mkinit-${{ steps.datetime.outputs.datetime }}.log

    - uses: stefanzweifel/git-auto-commit-action@v4.13.1
      with:
        # Optional, but recommended
        # Defaults to "Apply automatic changes"
        commit_message: "CI - mkinit: Update __init__.py recursively"

        # Optional branch name where commit should be pushed to.
        # Defaults to the current branch.
        # branch: feature-123

        # Optional. Used by `git-commit`.
        # See https://git-scm.com/docs/git-commit#_options
        # commit_options: '--no-verify --signoff'

        # Optional glob pattern of files which should be added to the commit
        # Defaults to all (.)
        # See the `pathspec`-documentation for git
        # - https://git-scm.com/docs/git-add#Documentation/git-add.txt-ltpathspecgt82308203
        # - https://git-scm.com/docs/gitglossary#Documentation/gitglossary.txt-aiddefpathspecapathspec
        file_pattern: "**/__init__.py"

        # Optional local file path to the repository
        # Defaults to the root of the repository
        # repository: .

        # Optional commit user and author settings
        commit_user_name: GitHub Actions Bot - mkinit  # defaults to "GitHub Actions"
        # commit_user_email: my-github-actions-bot@example.org  # defaults to "actions@github.com"
        # commit_author: Author <actions@github.com>  # defaults to author of the commit that triggered the run

        # Optional tag message
        # Action will create and push a new tag to the remote repository and the defined branch
        # tagging_message: 'v1.0.0'

        # Optional. Used by `git-status`
        # See https://git-scm.com/docs/git-status#_options
        # status_options: '--untracked-files=no'

        # Optional. Used by `git-add`
        # See https://git-scm.com/docs/git-add#_options
        # add_options: '-u'

        # Optional. Used by `git-push`
        # See https://git-scm.com/docs/git-push#_options
        # push_options: '--force'

        # Optional. Disable dirty check and always try to create a commit and push
        # we disable it as we don't want commits with no changes
        skip_dirty_check: false

        # Optional. Skip internal call to `git fetch`
        skip_fetch: false

        # Optional. Prevents the shell from expanding filenames.
        # Details: https://www.gnu.org/software/bash/manual/html_node/Filename-Expansion.html
        disable_globbing: true

    # this is required for sharing data with other jobs, as each job has a
    # different runner
    - name: Upload mkinit log
      uses: actions/upload-artifact@v2.3.1
      with:
        name: mkinit-${{ steps.datetime.outputs.datetime }}
        path: mkinit-${{ steps.datetime.outputs.datetime }}.log
